<launch>
   <arg name="camera_name" default="pupil_world" />
   <arg name="visualize" default="false" />
   <arg name="record" default="false" />
   <arg name="video_stream_provider" default="$(find aruco_detection)/data/world.mp4" />

   <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="$(arg camera_name)" />
        <!-- means video device 0, /dev/video0 -->
        <arg name="video_stream_provider" value="$(arg video_stream_provider)" />
        <!-- set camera fps to (if the device allows) -->
        <arg name="set_camera_fps" value="2"/>
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="100" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="2" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="pupil_world" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find aruco_detection)/config/pupil.yaml" -->
        <arg name="camera_info_url" value="file:///$(find aruco_detection)/config/pupil.yaml" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
   </include>
   
   <include file="$(find aruco_detection)/launch/aruco_detector.launch">
     <arg name="image_topic" value="/$(arg camera_name)" />
     <arg name="visualize" value="$(arg visualize)" />
     <arg name="record" value="$(arg record)" />
     <arg name="image_subtopic" value="image_raw" />
   </include>
     
   
</launch>
